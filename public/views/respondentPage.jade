extends layout
block content
  .container-fluid(ng-controller="RespondController")
    .row
      .col-sm-7
        form(name="answerForm", ng-submit="saveAnswers(answerForm.$valid)", novalidate)
          .ng-cloak(ng-init="surveyCode='#{surveyCode}'", ng-show="!$storage[surveyCode].responded")
            h3 {{ survey.metadata.title }}
            h4 {{ survey.metadata.description }}

            .panel.panel-default(ng-repeat="question in survey.questions")
              .panel-heading
                h4(ng-class="{bold: question.isRequired}") \#{{ $index+1 }}  {{ question.body }}
                  span(ng-show="question.isRequired")  *
              .panel-body
                ng-form(name="answerFieldForm")
                  div(ng-show="question.type === 'text'")
                    input.form-control(type="text", name="answer", ng-model="answers[$index].respond", ng-required="question.isRequired",
                    ng-class="{'has-error': answerFieldForm.answer.$invalid == true && answerFieldForm.answer.$dirty}")
                    br
                    p.pull-right(ng-show="answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty") This question is required.
                  div(ng-show="question.type === 'oneChoice'")
                    ul
                      li(ng-repeat="possibleAnswer in question.possibleAnswers")
                        label
                          input(type="radio", name="answer", ng-model="$parent.answers[$parent.$index].respond",
                          value="{{possibleAnswer}}", ng-required="question.isRequired", ng-class="{'has-error': answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty}")
                          |  {{possibleAnswer}}
                          p.pull-right(ng-show="answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty") This question is required.

                  div(ng-show="question.type === 'multiChoice'", ng-class="{'has-error': question.isRequired && answers[$index].respond.length === 0}")
                    ul
                      li(ng-repeat="possibleAnswer in question.possibleAnswers")
                        label

                          input(type="checkbox", name="answer", value="{{possibleAnswer}}", ng-click="toggleSelection($parent.$index, possibleAnswer)",
                          ng-checked="$parent.answers[$parent.$index].respond.indexOf(possibleAnswer) > -1", ng-required="question.isRequired", ng-class="{'has-error': answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty}")
                          |  {{ possibleAnswer }}
                          //input(type="checkbox", name="answer", ng-model="$parent.answers[$parent.$index].respond", ng-change="dd($parent.answers)",
                          //value="{{possibleAnswer}}", ng-required="question.isRequired", ng-class="{'has-error': answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty}")
                          //|  {{possibleAnswer}}
                          //p.pull-right(ng-show="answerFieldForm.answer.$invalid && answerFieldForm.answer.$dirty") This question is required.
            .alert.alert-danger(ng-show="!answeredAll") Please answer all required questions.

            button.btn.btn-primary(type="submit") Send answers

          div(ng-show="$storage[surveyCode].responded === true")
            p Thank you for responding

    div(ng-show="survey === null")
      p There's no survey with that code.

block append scripts
  script(src='/javascripts/common/main.js')
  script(src='/javascripts/common/services/Surveys.js')
  script(src='/javascripts/common/services/Answers.js')
  script(src='/javascripts/answers/main.js')
  script(src='/javascripts/answers/controllers/RespondController.js')
  script(src='/javascripts/answerApp.js')